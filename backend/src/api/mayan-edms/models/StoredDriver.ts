/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StoredDriver
 */
export interface StoredDriver {
    /**
     * 
     * @type {string}
     * @memberof StoredDriver
     */
    readonly arguments?: string;
    /**
     * 
     * @type {string}
     * @memberof StoredDriver
     */
    readonly description?: string;
    /**
     * 
     * @type {string}
     * @memberof StoredDriver
     */
    readonly driverPath?: string;
    /**
     * 
     * @type {string}
     * @memberof StoredDriver
     */
    readonly enabledDefault?: string;
    /**
     * 
     * @type {number}
     * @memberof StoredDriver
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof StoredDriver
     */
    readonly internalName?: string;
    /**
     * 
     * @type {string}
     * @memberof StoredDriver
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof StoredDriver
     */
    readonly mimeTypes?: string;
    /**
     * 
     * @type {string}
     * @memberof StoredDriver
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the StoredDriver interface.
 */
export function instanceOfStoredDriver(value: object): value is StoredDriver {
    if (!('label' in value) || value['label'] === undefined) return false;
    return true;
}

export function StoredDriverFromJSON(json: any): StoredDriver {
    return StoredDriverFromJSONTyped(json, false);
}

export function StoredDriverFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoredDriver {
    if (json == null) {
        return json;
    }
    return {
        
        'arguments': json['arguments'] == null ? undefined : json['arguments'],
        'description': json['description'] == null ? undefined : json['description'],
        'driverPath': json['driver_path'] == null ? undefined : json['driver_path'],
        'enabledDefault': json['enabled_default'] == null ? undefined : json['enabled_default'],
        'id': json['id'] == null ? undefined : json['id'],
        'internalName': json['internal_name'] == null ? undefined : json['internal_name'],
        'label': json['label'],
        'mimeTypes': json['mime_types'] == null ? undefined : json['mime_types'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function StoredDriverToJSON(json: any): StoredDriver {
    return StoredDriverToJSONTyped(json, false);
}

export function StoredDriverToJSONTyped(value?: Omit<StoredDriver, 'arguments'|'description'|'driver_path'|'enabled_default'|'id'|'internal_name'|'mime_types'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'label': value['label'],
    };
}

