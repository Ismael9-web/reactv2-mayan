/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Permission } from './Permission';
import {
    PermissionFromJSON,
    PermissionFromJSONTyped,
    PermissionToJSON,
    PermissionToJSONTyped,
} from './Permission';
import type { SourceBackendActionInterface } from './SourceBackendActionInterface';
import {
    SourceBackendActionInterfaceFromJSON,
    SourceBackendActionInterfaceFromJSONTyped,
    SourceBackendActionInterfaceToJSON,
    SourceBackendActionInterfaceToJSONTyped,
} from './SourceBackendActionInterface';

/**
 * 
 * @export
 * @interface SourceBackendAction
 */
export interface SourceBackendAction {
    /**
     * 
     * @type {boolean}
     * @memberof SourceBackendAction
     */
    readonly acceptFiles?: boolean;
    /**
     * Optional arguments for the action. Must be JSON formatted.
     * @type {object}
     * @memberof SourceBackendAction
     */
    arguments?: object;
    /**
     * 
     * @type {boolean}
     * @memberof SourceBackendAction
     */
    readonly confirmation?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SourceBackendAction
     */
    readonly executeUrl?: string;
    /**
     * 
     * @type {Array<SourceBackendActionInterface>}
     * @memberof SourceBackendAction
     */
    readonly interfaces?: Array<SourceBackendActionInterface>;
    /**
     * 
     * @type {string}
     * @memberof SourceBackendAction
     */
    readonly name?: string;
    /**
     * 
     * @type {Permission}
     * @memberof SourceBackendAction
     */
    permission?: Permission;
    /**
     * 
     * @type {string}
     * @memberof SourceBackendAction
     */
    readonly sourceId?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceBackendAction
     */
    readonly sourceUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceBackendAction
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the SourceBackendAction interface.
 */
export function instanceOfSourceBackendAction(value: object): value is SourceBackendAction {
    return true;
}

export function SourceBackendActionFromJSON(json: any): SourceBackendAction {
    return SourceBackendActionFromJSONTyped(json, false);
}

export function SourceBackendActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceBackendAction {
    if (json == null) {
        return json;
    }
    return {
        
        'acceptFiles': json['accept_files'] == null ? undefined : json['accept_files'],
        'arguments': json['arguments'] == null ? undefined : json['arguments'],
        'confirmation': json['confirmation'] == null ? undefined : json['confirmation'],
        'executeUrl': json['execute_url'] == null ? undefined : json['execute_url'],
        'interfaces': json['interfaces'] == null ? undefined : ((json['interfaces'] as Array<any>).map(SourceBackendActionInterfaceFromJSON)),
        'name': json['name'] == null ? undefined : json['name'],
        'permission': json['permission'] == null ? undefined : PermissionFromJSON(json['permission']),
        'sourceId': json['source_id'] == null ? undefined : json['source_id'],
        'sourceUrl': json['source_url'] == null ? undefined : json['source_url'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function SourceBackendActionToJSON(json: any): SourceBackendAction {
    return SourceBackendActionToJSONTyped(json, false);
}

export function SourceBackendActionToJSONTyped(value?: Omit<SourceBackendAction, 'accept_files'|'confirmation'|'execute_url'|'interfaces'|'name'|'source_id'|'source_url'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'arguments': value['arguments'],
        'permission': PermissionToJSON(value['permission']),
    };
}

