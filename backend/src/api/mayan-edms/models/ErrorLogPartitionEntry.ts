/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentType } from './ContentType';
import {
    ContentTypeFromJSON,
    ContentTypeFromJSONTyped,
    ContentTypeToJSON,
    ContentTypeToJSONTyped,
} from './ContentType';

/**
 * 
 * @export
 * @interface ErrorLogPartitionEntry
 */
export interface ErrorLogPartitionEntry {
    /**
     * 
     * @type {ContentType}
     * @memberof ErrorLogPartitionEntry
     */
    contentType?: ContentType;
    /**
     * 
     * @type {Date}
     * @memberof ErrorLogPartitionEntry
     */
    readonly datetime?: Date;
    /**
     * 
     * @type {string}
     * @memberof ErrorLogPartitionEntry
     */
    readonly domainName?: string;
    /**
     * 
     * @type {number}
     * @memberof ErrorLogPartitionEntry
     */
    readonly id?: number;
    /**
     * 
     * @type {number}
     * @memberof ErrorLogPartitionEntry
     */
    objectId: number;
    /**
     * 
     * @type {string}
     * @memberof ErrorLogPartitionEntry
     */
    readonly text?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ErrorLogPartitionEntry
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the ErrorLogPartitionEntry interface.
 */
export function instanceOfErrorLogPartitionEntry(value: object): value is ErrorLogPartitionEntry {
    if (!('objectId' in value) || value['objectId'] === undefined) return false;
    return true;
}

export function ErrorLogPartitionEntryFromJSON(json: any): ErrorLogPartitionEntry {
    return ErrorLogPartitionEntryFromJSONTyped(json, false);
}

export function ErrorLogPartitionEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorLogPartitionEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'contentType': json['content_type'] == null ? undefined : ContentTypeFromJSON(json['content_type']),
        'datetime': json['datetime'] == null ? undefined : (new Date(json['datetime'])),
        'domainName': json['domain_name'] == null ? undefined : json['domain_name'],
        'id': json['id'] == null ? undefined : json['id'],
        'objectId': json['object_id'],
        'text': json['text'] == null ? undefined : json['text'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function ErrorLogPartitionEntryToJSON(json: any): ErrorLogPartitionEntry {
    return ErrorLogPartitionEntryToJSONTyped(json, false);
}

export function ErrorLogPartitionEntryToJSONTyped(value?: Omit<ErrorLogPartitionEntry, 'datetime'|'domain_name'|'id'|'text'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content_type': ContentTypeToJSON(value['contentType']),
        'object_id': value['objectId'],
    };
}

