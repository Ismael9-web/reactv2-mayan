/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface Comment
 */
export interface Comment {
    /**
     * 
     * @type {number}
     * @memberof Comment
     */
    readonly id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Comment
     */
    readonly submitDate?: Date;
    /**
     * Actual text content of the comment.
     * @type {string}
     * @memberof Comment
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof Comment
     */
    readonly url?: string;
    /**
     * 
     * @type {User}
     * @memberof Comment
     */
    user?: User;
}

/**
 * Check if a given object implements the Comment interface.
 */
export function instanceOfComment(value: object): value is Comment {
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function CommentFromJSON(json: any): Comment {
    return CommentFromJSONTyped(json, false);
}

export function CommentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Comment {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'submitDate': json['submit_date'] == null ? undefined : (new Date(json['submit_date'])),
        'text': json['text'],
        'url': json['url'] == null ? undefined : json['url'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
    };
}

export function CommentToJSON(json: any): Comment {
    return CommentToJSONTyped(json, false);
}

export function CommentToJSONTyped(value?: Omit<Comment, 'id'|'submit_date'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'text': value['text'],
        'user': UserToJSON(value['user']),
    };
}

