"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfDocumentsResolvedWebLinksList200Response = instanceOfDocumentsResolvedWebLinksList200Response;
exports.DocumentsResolvedWebLinksList200ResponseFromJSON = DocumentsResolvedWebLinksList200ResponseFromJSON;
exports.DocumentsResolvedWebLinksList200ResponseFromJSONTyped = DocumentsResolvedWebLinksList200ResponseFromJSONTyped;
exports.DocumentsResolvedWebLinksList200ResponseToJSON = DocumentsResolvedWebLinksList200ResponseToJSON;
exports.DocumentsResolvedWebLinksList200ResponseToJSONTyped = DocumentsResolvedWebLinksList200ResponseToJSONTyped;
const ResolvedWebLink_1 = require("./ResolvedWebLink");
/**
 * Check if a given object implements the DocumentsResolvedWebLinksList200Response interface.
 */
function instanceOfDocumentsResolvedWebLinksList200Response(value) {
    if (!('count' in value) || value['count'] === undefined)
        return false;
    if (!('results' in value) || value['results'] === undefined)
        return false;
    return true;
}
function DocumentsResolvedWebLinksList200ResponseFromJSON(json) {
    return DocumentsResolvedWebLinksList200ResponseFromJSONTyped(json, false);
}
function DocumentsResolvedWebLinksList200ResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'count': json['count'],
        'next': json['next'] == null ? undefined : json['next'],
        'previous': json['previous'] == null ? undefined : json['previous'],
        'results': (json['results'].map(ResolvedWebLink_1.ResolvedWebLinkFromJSON)),
    };
}
function DocumentsResolvedWebLinksList200ResponseToJSON(json) {
    return DocumentsResolvedWebLinksList200ResponseToJSONTyped(json, false);
}
function DocumentsResolvedWebLinksList200ResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'count': value['count'],
        'next': value['next'],
        'previous': value['previous'],
        'results': (value['results'].map(ResolvedWebLink_1.ResolvedWebLinkToJSON)),
    };
}
