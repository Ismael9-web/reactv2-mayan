/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Announcement
 */
export interface Announcement {
    /**
     * Date and time until when this announcement is to be displayed.
     * @type {Date}
     * @memberof Announcement
     */
    endDatetime?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof Announcement
     */
    enabled?: boolean;
    /**
     * Short description of this announcement.
     * @type {string}
     * @memberof Announcement
     */
    label: string;
    /**
     * 
     * @type {number}
     * @memberof Announcement
     */
    readonly id?: number;
    /**
     * Date and time after which this announcement will be displayed.
     * @type {Date}
     * @memberof Announcement
     */
    startDatetime?: Date | null;
    /**
     * The actual text to be displayed.
     * @type {string}
     * @memberof Announcement
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof Announcement
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the Announcement interface.
 */
export function instanceOfAnnouncement(value: object): value is Announcement {
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function AnnouncementFromJSON(json: any): Announcement {
    return AnnouncementFromJSONTyped(json, false);
}

export function AnnouncementFromJSONTyped(json: any, ignoreDiscriminator: boolean): Announcement {
    if (json == null) {
        return json;
    }
    return {
        
        'endDatetime': json['end_datetime'] == null ? undefined : (new Date(json['end_datetime'])),
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'label': json['label'],
        'id': json['id'] == null ? undefined : json['id'],
        'startDatetime': json['start_datetime'] == null ? undefined : (new Date(json['start_datetime'])),
        'text': json['text'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function AnnouncementToJSON(json: any): Announcement {
    return AnnouncementToJSONTyped(json, false);
}

export function AnnouncementToJSONTyped(value?: Omit<Announcement, 'id'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'end_datetime': value['endDatetime'] === null ? null : ((value['endDatetime'] as any)?.toISOString()),
        'enabled': value['enabled'],
        'label': value['label'],
        'start_datetime': value['startDatetime'] === null ? null : ((value['startDatetime'] as any)?.toISOString()),
        'text': value['text'],
    };
}

