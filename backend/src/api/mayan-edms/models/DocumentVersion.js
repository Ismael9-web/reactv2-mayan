"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfDocumentVersion = instanceOfDocumentVersion;
exports.DocumentVersionFromJSON = DocumentVersionFromJSON;
exports.DocumentVersionFromJSONTyped = DocumentVersionFromJSONTyped;
exports.DocumentVersionToJSON = DocumentVersionToJSON;
exports.DocumentVersionToJSONTyped = DocumentVersionToJSONTyped;
const DocumentVersionPage_1 = require("./DocumentVersionPage");
/**
 * Check if a given object implements the DocumentVersion interface.
 */
function instanceOfDocumentVersion(value) {
    return true;
}
function DocumentVersionFromJSON(json) {
    return DocumentVersionFromJSONTyped(json, false);
}
function DocumentVersionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'active': json['active'] == null ? undefined : json['active'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'documentId': json['document_id'] == null ? undefined : json['document_id'],
        'documentUrl': json['document_url'] == null ? undefined : json['document_url'],
        'exportUrl': json['export_url'] == null ? undefined : json['export_url'],
        'id': json['id'] == null ? undefined : json['id'],
        'pageListUrl': json['page_list_url'] == null ? undefined : json['page_list_url'],
        'pagesFirst': json['pages_first'] == null ? undefined : (0, DocumentVersionPage_1.DocumentVersionPageFromJSON)(json['pages_first']),
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'url': json['url'] == null ? undefined : json['url'],
    };
}
function DocumentVersionToJSON(json) {
    return DocumentVersionToJSONTyped(json, false);
}
function DocumentVersionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'active': value['active'],
        'comment': value['comment'],
        'pages_first': (0, DocumentVersionPage_1.DocumentVersionPageToJSON)(value['pagesFirst']),
    };
}
