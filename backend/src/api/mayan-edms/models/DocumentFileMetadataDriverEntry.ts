/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentFile } from './DocumentFile';
import {
    DocumentFileFromJSON,
    DocumentFileFromJSONTyped,
    DocumentFileToJSON,
    DocumentFileToJSONTyped,
} from './DocumentFile';
import type { StoredDriver } from './StoredDriver';
import {
    StoredDriverFromJSON,
    StoredDriverFromJSONTyped,
    StoredDriverToJSON,
    StoredDriverToJSONTyped,
} from './StoredDriver';

/**
 * 
 * @export
 * @interface DocumentFileMetadataDriverEntry
 */
export interface DocumentFileMetadataDriverEntry {
    /**
     * 
     * @type {DocumentFile}
     * @memberof DocumentFileMetadataDriverEntry
     */
    documentFile?: DocumentFile;
    /**
     * 
     * @type {string}
     * @memberof DocumentFileMetadataDriverEntry
     */
    readonly entriesUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof DocumentFileMetadataDriverEntry
     */
    readonly id?: number;
    /**
     * 
     * @type {StoredDriver}
     * @memberof DocumentFileMetadataDriverEntry
     */
    storedDriver?: StoredDriver;
    /**
     * 
     * @type {string}
     * @memberof DocumentFileMetadataDriverEntry
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the DocumentFileMetadataDriverEntry interface.
 */
export function instanceOfDocumentFileMetadataDriverEntry(value: object): value is DocumentFileMetadataDriverEntry {
    return true;
}

export function DocumentFileMetadataDriverEntryFromJSON(json: any): DocumentFileMetadataDriverEntry {
    return DocumentFileMetadataDriverEntryFromJSONTyped(json, false);
}

export function DocumentFileMetadataDriverEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentFileMetadataDriverEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'documentFile': json['document_file'] == null ? undefined : DocumentFileFromJSON(json['document_file']),
        'entriesUrl': json['entries_url'] == null ? undefined : json['entries_url'],
        'id': json['id'] == null ? undefined : json['id'],
        'storedDriver': json['stored_driver'] == null ? undefined : StoredDriverFromJSON(json['stored_driver']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function DocumentFileMetadataDriverEntryToJSON(json: any): DocumentFileMetadataDriverEntry {
    return DocumentFileMetadataDriverEntryToJSONTyped(json, false);
}

export function DocumentFileMetadataDriverEntryToJSONTyped(value?: Omit<DocumentFileMetadataDriverEntry, 'entries_url'|'id'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'document_file': DocumentFileToJSON(value['documentFile']),
        'stored_driver': StoredDriverToJSON(value['storedDriver']),
    };
}

