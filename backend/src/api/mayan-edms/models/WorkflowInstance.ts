/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowTemplate } from './WorkflowTemplate';
import {
    WorkflowTemplateFromJSON,
    WorkflowTemplateFromJSONTyped,
    WorkflowTemplateToJSON,
    WorkflowTemplateToJSONTyped,
} from './WorkflowTemplate';
import type { WorkflowInstanceLogEntry } from './WorkflowInstanceLogEntry';
import {
    WorkflowInstanceLogEntryFromJSON,
    WorkflowInstanceLogEntryFromJSONTyped,
    WorkflowInstanceLogEntryToJSON,
    WorkflowInstanceLogEntryToJSONTyped,
} from './WorkflowInstanceLogEntry';
import type { WorkflowTemplateState } from './WorkflowTemplateState';
import {
    WorkflowTemplateStateFromJSON,
    WorkflowTemplateStateFromJSONTyped,
    WorkflowTemplateStateToJSON,
    WorkflowTemplateStateToJSONTyped,
} from './WorkflowTemplateState';

/**
 * 
 * @export
 * @interface WorkflowInstance
 */
export interface WorkflowInstance {
    /**
     * 
     * @type {string}
     * @memberof WorkflowInstance
     */
    readonly context?: string;
    /**
     * 
     * @type {WorkflowTemplateState}
     * @memberof WorkflowInstance
     */
    currentState?: WorkflowTemplateState;
    /**
     * 
     * @type {string}
     * @memberof WorkflowInstance
     */
    readonly documentUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowInstance
     */
    readonly id?: number;
    /**
     * 
     * @type {WorkflowInstanceLogEntry}
     * @memberof WorkflowInstance
     */
    lastLogEntry?: WorkflowInstanceLogEntry;
    /**
     * A link to the entire history of this workflow.
     * @type {string}
     * @memberof WorkflowInstance
     */
    readonly logEntriesUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowInstance
     */
    readonly logEntryTransitionsUrl?: string;
    /**
     * API URL pointing to a workflow in relation to the document to which it is attached. This URL is different than the canonical workflow URL.
     * @type {string}
     * @memberof WorkflowInstance
     */
    readonly url?: string;
    /**
     * 
     * @type {WorkflowTemplate}
     * @memberof WorkflowInstance
     */
    workflowTemplate?: WorkflowTemplate;
    /**
     * 
     * @type {string}
     * @memberof WorkflowInstance
     */
    readonly workflowTemplateUrl?: string;
}

/**
 * Check if a given object implements the WorkflowInstance interface.
 */
export function instanceOfWorkflowInstance(value: object): value is WorkflowInstance {
    return true;
}

export function WorkflowInstanceFromJSON(json: any): WorkflowInstance {
    return WorkflowInstanceFromJSONTyped(json, false);
}

export function WorkflowInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowInstance {
    if (json == null) {
        return json;
    }
    return {
        
        'context': json['context'] == null ? undefined : json['context'],
        'currentState': json['current_state'] == null ? undefined : WorkflowTemplateStateFromJSON(json['current_state']),
        'documentUrl': json['document_url'] == null ? undefined : json['document_url'],
        'id': json['id'] == null ? undefined : json['id'],
        'lastLogEntry': json['last_log_entry'] == null ? undefined : WorkflowInstanceLogEntryFromJSON(json['last_log_entry']),
        'logEntriesUrl': json['log_entries_url'] == null ? undefined : json['log_entries_url'],
        'logEntryTransitionsUrl': json['log_entry_transitions_url'] == null ? undefined : json['log_entry_transitions_url'],
        'url': json['url'] == null ? undefined : json['url'],
        'workflowTemplate': json['workflow_template'] == null ? undefined : WorkflowTemplateFromJSON(json['workflow_template']),
        'workflowTemplateUrl': json['workflow_template_url'] == null ? undefined : json['workflow_template_url'],
    };
}

export function WorkflowInstanceToJSON(json: any): WorkflowInstance {
    return WorkflowInstanceToJSONTyped(json, false);
}

export function WorkflowInstanceToJSONTyped(value?: Omit<WorkflowInstance, 'context'|'document_url'|'id'|'log_entries_url'|'log_entry_transitions_url'|'url'|'workflow_template_url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'current_state': WorkflowTemplateStateToJSON(value['currentState']),
        'last_log_entry': WorkflowInstanceLogEntryToJSON(value['lastLogEntry']),
        'workflow_template': WorkflowTemplateToJSON(value['workflowTemplate']),
    };
}

