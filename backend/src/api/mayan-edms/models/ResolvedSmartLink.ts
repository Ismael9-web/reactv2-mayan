/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResolvedSmartLink
 */
export interface ResolvedSmartLink {
    /**
     * 
     * @type {string}
     * @memberof ResolvedSmartLink
     */
    readonly documentsUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ResolvedSmartLink
     */
    readonly label?: string;
    /**
     * 
     * @type {string}
     * @memberof ResolvedSmartLink
     */
    readonly smartLinkUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ResolvedSmartLink
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the ResolvedSmartLink interface.
 */
export function instanceOfResolvedSmartLink(value: object): value is ResolvedSmartLink {
    return true;
}

export function ResolvedSmartLinkFromJSON(json: any): ResolvedSmartLink {
    return ResolvedSmartLinkFromJSONTyped(json, false);
}

export function ResolvedSmartLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResolvedSmartLink {
    if (json == null) {
        return json;
    }
    return {
        
        'documentsUrl': json['documents_url'] == null ? undefined : json['documents_url'],
        'label': json['label'] == null ? undefined : json['label'],
        'smartLinkUrl': json['smart_link_url'] == null ? undefined : json['smart_link_url'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function ResolvedSmartLinkToJSON(json: any): ResolvedSmartLink {
    return ResolvedSmartLinkToJSONTyped(json, false);
}

export function ResolvedSmartLinkToJSONTyped(value?: Omit<ResolvedSmartLink, 'documents_url'|'label'|'smart_link_url'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

