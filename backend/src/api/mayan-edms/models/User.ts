/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * The given name of the user.
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly dateJoined?: Date;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email?: string;
    /**
     * URL of the API endpoint showing the list groups this user belongs to.
     * @type {string}
     * @memberof User
     */
    readonly groupsUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    readonly id?: number;
    /**
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     * @type {boolean}
     * @memberof User
     */
    readonly isActive?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly lastLogin?: Date | null;
    /**
     * The family name of the user.
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly url?: string;
    /**
     * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
     * @type {string}
     * @memberof User
     */
    username: string;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('username' in value) || value['username'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'firstName': json['first_name'] == null ? undefined : json['first_name'],
        'dateJoined': json['date_joined'] == null ? undefined : (new Date(json['date_joined'])),
        'email': json['email'] == null ? undefined : json['email'],
        'groupsUrl': json['groups_url'] == null ? undefined : json['groups_url'],
        'id': json['id'] == null ? undefined : json['id'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'lastLogin': json['last_login'] == null ? undefined : (new Date(json['last_login'])),
        'lastName': json['last_name'] == null ? undefined : json['last_name'],
        'password': json['password'] == null ? undefined : json['password'],
        'url': json['url'] == null ? undefined : json['url'],
        'username': json['username'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: Omit<User, 'date_joined'|'groups_url'|'id'|'is_active'|'last_login'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'first_name': value['firstName'],
        'email': value['email'],
        'last_name': value['lastName'],
        'password': value['password'],
        'username': value['username'],
    };
}

