/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MetadataType } from './MetadataType';
import {
    MetadataTypeFromJSON,
    MetadataTypeFromJSONTyped,
    MetadataTypeToJSON,
    MetadataTypeToJSONTyped,
} from './MetadataType';
import type { Document } from './Document';
import {
    DocumentFromJSON,
    DocumentFromJSONTyped,
    DocumentToJSON,
    DocumentToJSONTyped,
} from './Document';

/**
 * 
 * @export
 * @interface DocumentMetadata
 */
export interface DocumentMetadata {
    /**
     * 
     * @type {Document}
     * @memberof DocumentMetadata
     */
    document?: Document;
    /**
     * 
     * @type {number}
     * @memberof DocumentMetadata
     */
    readonly id?: number;
    /**
     * 
     * @type {MetadataType}
     * @memberof DocumentMetadata
     */
    metadataType?: MetadataType;
    /**
     * 
     * @type {string}
     * @memberof DocumentMetadata
     */
    readonly url?: string;
    /**
     * The actual value stored in the metadata type field for the document.
     * @type {string}
     * @memberof DocumentMetadata
     */
    value?: string | null;
}

/**
 * Check if a given object implements the DocumentMetadata interface.
 */
export function instanceOfDocumentMetadata(value: object): value is DocumentMetadata {
    return true;
}

export function DocumentMetadataFromJSON(json: any): DocumentMetadata {
    return DocumentMetadataFromJSONTyped(json, false);
}

export function DocumentMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'document': json['document'] == null ? undefined : DocumentFromJSON(json['document']),
        'id': json['id'] == null ? undefined : json['id'],
        'metadataType': json['metadata_type'] == null ? undefined : MetadataTypeFromJSON(json['metadata_type']),
        'url': json['url'] == null ? undefined : json['url'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function DocumentMetadataToJSON(json: any): DocumentMetadata {
    return DocumentMetadataToJSONTyped(json, false);
}

export function DocumentMetadataToJSONTyped(value?: Omit<DocumentMetadata, 'id'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'document': DocumentToJSON(value['document']),
        'metadata_type': MetadataTypeToJSON(value['metadataType']),
        'value': value['value'],
    };
}

