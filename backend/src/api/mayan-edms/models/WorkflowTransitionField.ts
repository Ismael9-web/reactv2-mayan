/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WorkflowTransitionField
 */
export interface WorkflowTransitionField {
    /**
     * 
     * @type {number}
     * @memberof WorkflowTransitionField
     */
    fieldType: number;
    /**
     * The name that will be used to identify this field in other parts of the workflow system.
     * @type {string}
     * @memberof WorkflowTransitionField
     */
    name: string;
    /**
     * An optional message that will help users better understand the purpose of the field and data to provide.
     * @type {string}
     * @memberof WorkflowTransitionField
     */
    helpText?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTransitionField
     */
    readonly id?: number;
    /**
     * The field name that will be shown on the user interface.
     * @type {string}
     * @memberof WorkflowTransitionField
     */
    label: string;
    /**
     * Enter a template to render. Must result in a comma delimited string.
     * @type {string}
     * @memberof WorkflowTransitionField
     */
    lookup?: string | null;
    /**
     * Whether this field needs to be filled out or not to proceed.
     * @type {boolean}
     * @memberof WorkflowTransitionField
     */
    required?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTransitionField
     */
    readonly url?: string;
    /**
     * An optional class to change the default presentation of the field.
     * @type {number}
     * @memberof WorkflowTransitionField
     */
    widget?: number | null;
    /**
     * A group of keyword arguments to customize the widget. Use YAML format.
     * @type {string}
     * @memberof WorkflowTransitionField
     */
    widgetKwargs?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTransitionField
     */
    readonly workflowTemplateUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTransitionField
     */
    readonly workflowTransitionId?: number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTransitionField
     */
    readonly workflowTransitionUrl?: string;
}

/**
 * Check if a given object implements the WorkflowTransitionField interface.
 */
export function instanceOfWorkflowTransitionField(value: object): value is WorkflowTransitionField {
    if (!('fieldType' in value) || value['fieldType'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('label' in value) || value['label'] === undefined) return false;
    return true;
}

export function WorkflowTransitionFieldFromJSON(json: any): WorkflowTransitionField {
    return WorkflowTransitionFieldFromJSONTyped(json, false);
}

export function WorkflowTransitionFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTransitionField {
    if (json == null) {
        return json;
    }
    return {
        
        'fieldType': json['field_type'],
        'name': json['name'],
        'helpText': json['help_text'] == null ? undefined : json['help_text'],
        'id': json['id'] == null ? undefined : json['id'],
        'label': json['label'],
        'lookup': json['lookup'] == null ? undefined : json['lookup'],
        'required': json['required'] == null ? undefined : json['required'],
        'url': json['url'] == null ? undefined : json['url'],
        'widget': json['widget'] == null ? undefined : json['widget'],
        'widgetKwargs': json['widget_kwargs'] == null ? undefined : json['widget_kwargs'],
        'workflowTemplateUrl': json['workflow_template_url'] == null ? undefined : json['workflow_template_url'],
        'workflowTransitionId': json['workflow_transition_id'] == null ? undefined : json['workflow_transition_id'],
        'workflowTransitionUrl': json['workflow_transition_url'] == null ? undefined : json['workflow_transition_url'],
    };
}

export function WorkflowTransitionFieldToJSON(json: any): WorkflowTransitionField {
    return WorkflowTransitionFieldToJSONTyped(json, false);
}

export function WorkflowTransitionFieldToJSONTyped(value?: Omit<WorkflowTransitionField, 'id'|'url'|'workflow_template_url'|'workflow_transition_id'|'workflow_transition_url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'field_type': value['fieldType'],
        'name': value['name'],
        'help_text': value['helpText'],
        'label': value['label'],
        'lookup': value['lookup'],
        'required': value['required'],
        'widget': value['widget'],
        'widget_kwargs': value['widgetKwargs'],
    };
}

