/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Cabinet
 */
export interface Cabinet {
    /**
     * 
     * @type {Array<Cabinet>}
     * @memberof Cabinet
     */
    children?: Array<Cabinet>;
    /**
     * URL of the API endpoint showing the list documents inside this cabinet.
     * @type {string}
     * @memberof Cabinet
     */
    readonly documentsUrl?: string;
    /**
     * The name of this cabinet level appended to the names of its ancestors.
     * @type {string}
     * @memberof Cabinet
     */
    readonly fullPath?: string;
    /**
     * 
     * @type {number}
     * @memberof Cabinet
     */
    readonly id?: number;
    /**
     * A short text used to identify the cabinet.
     * @type {string}
     * @memberof Cabinet
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof Cabinet
     */
    readonly parentId?: string;
    /**
     * 
     * @type {number}
     * @memberof Cabinet
     */
    parent?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Cabinet
     */
    readonly parentUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Cabinet
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the Cabinet interface.
 */
export function instanceOfCabinet(value: object): value is Cabinet {
    if (!('label' in value) || value['label'] === undefined) return false;
    return true;
}

export function CabinetFromJSON(json: any): Cabinet {
    return CabinetFromJSONTyped(json, false);
}

export function CabinetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Cabinet {
    if (json == null) {
        return json;
    }
    return {
        
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(CabinetFromJSON)),
        'documentsUrl': json['documents_url'] == null ? undefined : json['documents_url'],
        'fullPath': json['full_path'] == null ? undefined : json['full_path'],
        'id': json['id'] == null ? undefined : json['id'],
        'label': json['label'],
        'parentId': json['parent_id'] == null ? undefined : json['parent_id'],
        'parent': json['parent'] == null ? undefined : json['parent'],
        'parentUrl': json['parent_url'] == null ? undefined : json['parent_url'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function CabinetToJSON(json: any): Cabinet {
    return CabinetToJSONTyped(json, false);
}

export function CabinetToJSONTyped(value?: Omit<Cabinet, 'documents_url'|'full_path'|'id'|'parent_id'|'parent_url'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(CabinetToJSON)),
        'label': value['label'],
        'parent': value['parent'],
    };
}

