/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentVersionPage } from './DocumentVersionPage';
import {
    DocumentVersionPageFromJSON,
    DocumentVersionPageFromJSONTyped,
    DocumentVersionPageToJSON,
    DocumentVersionPageToJSONTyped,
} from './DocumentVersionPage';

/**
 * 
 * @export
 * @interface DocumentVersion
 */
export interface DocumentVersion {
    /**
     * Determines the active version of the document.
     * @type {boolean}
     * @memberof DocumentVersion
     */
    active?: boolean;
    /**
     * An optional short text describing the document version.
     * @type {string}
     * @memberof DocumentVersion
     */
    comment?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentVersion
     */
    readonly documentId?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentVersion
     */
    readonly documentUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentVersion
     */
    readonly exportUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof DocumentVersion
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof DocumentVersion
     */
    readonly pageListUrl?: string;
    /**
     * 
     * @type {DocumentVersionPage}
     * @memberof DocumentVersion
     */
    pagesFirst?: DocumentVersionPage;
    /**
     * The server date and time when the document version was created.
     * @type {Date}
     * @memberof DocumentVersion
     */
    readonly timestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof DocumentVersion
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the DocumentVersion interface.
 */
export function instanceOfDocumentVersion(value: object): value is DocumentVersion {
    return true;
}

export function DocumentVersionFromJSON(json: any): DocumentVersion {
    return DocumentVersionFromJSONTyped(json, false);
}

export function DocumentVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentVersion {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'] == null ? undefined : json['active'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'documentId': json['document_id'] == null ? undefined : json['document_id'],
        'documentUrl': json['document_url'] == null ? undefined : json['document_url'],
        'exportUrl': json['export_url'] == null ? undefined : json['export_url'],
        'id': json['id'] == null ? undefined : json['id'],
        'pageListUrl': json['page_list_url'] == null ? undefined : json['page_list_url'],
        'pagesFirst': json['pages_first'] == null ? undefined : DocumentVersionPageFromJSON(json['pages_first']),
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function DocumentVersionToJSON(json: any): DocumentVersion {
    return DocumentVersionToJSONTyped(json, false);
}

export function DocumentVersionToJSONTyped(value?: Omit<DocumentVersion, 'document_id'|'document_url'|'export_url'|'id'|'page_list_url'|'timestamp'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'comment': value['comment'],
        'pages_first': DocumentVersionPageToJSON(value['pagesFirst']),
    };
}

