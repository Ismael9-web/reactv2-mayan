/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentType
 */
export interface DocumentType {
    /**
     * Amount of time after which documents of this type in the trash will be deleted.
     * @type {number}
     * @memberof DocumentType
     */
    deleteTimePeriod?: number | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentType
     */
    deleteTimeUnit?: DocumentTypeDeleteTimeUnitEnum | null;
    /**
     * Time (in seconds) after which a document stub will be considered invalid and deleted, if pruning is enabled. This an optimization setting and should only be changed for specific circumstances.
     * @type {number}
     * @memberof DocumentType
     */
    documentStubExpirationInterval?: number;
    /**
     * Delete documents that do not contain any files after a configured expiration interval.
     * @type {boolean}
     * @memberof DocumentType
     */
    documentStubPruningEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DocumentType
     */
    readonly documentsUrl?: string;
    /**
     * The class responsible for producing the actual filename used to store the uploaded documents.
     * @type {string}
     * @memberof DocumentType
     */
    filenameGeneratorBackend?: string;
    /**
     * The arguments for the filename generator backend as a YAML dictionary.
     * @type {string}
     * @memberof DocumentType
     */
    filenameGeneratorBackendArguments?: string;
    /**
     * 
     * @type {number}
     * @memberof DocumentType
     */
    readonly id?: number;
    /**
     * A short text identifying the document type.
     * @type {string}
     * @memberof DocumentType
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentType
     */
    readonly quickLabelListUrl?: string;
    /**
     * Amount of time after which documents of this type will be moved to the trash.
     * @type {number}
     * @memberof DocumentType
     */
    trashTimePeriod?: number | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentType
     */
    trashTimeUnit?: DocumentTypeTrashTimeUnitEnum | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentType
     */
    readonly url?: string;
}


/**
 * @export
 */
export const DocumentTypeDeleteTimeUnitEnum = {
    Days: 'days',
    Hours: 'hours',
    Minutes: 'minutes'
} as const;
export type DocumentTypeDeleteTimeUnitEnum = typeof DocumentTypeDeleteTimeUnitEnum[keyof typeof DocumentTypeDeleteTimeUnitEnum];

/**
 * @export
 */
export const DocumentTypeTrashTimeUnitEnum = {
    Days: 'days',
    Hours: 'hours',
    Minutes: 'minutes'
} as const;
export type DocumentTypeTrashTimeUnitEnum = typeof DocumentTypeTrashTimeUnitEnum[keyof typeof DocumentTypeTrashTimeUnitEnum];


/**
 * Check if a given object implements the DocumentType interface.
 */
export function instanceOfDocumentType(value: object): value is DocumentType {
    if (!('label' in value) || value['label'] === undefined) return false;
    return true;
}

export function DocumentTypeFromJSON(json: any): DocumentType {
    return DocumentTypeFromJSONTyped(json, false);
}

export function DocumentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentType {
    if (json == null) {
        return json;
    }
    return {
        
        'deleteTimePeriod': json['delete_time_period'] == null ? undefined : json['delete_time_period'],
        'deleteTimeUnit': json['delete_time_unit'] == null ? undefined : json['delete_time_unit'],
        'documentStubExpirationInterval': json['document_stub_expiration_interval'] == null ? undefined : json['document_stub_expiration_interval'],
        'documentStubPruningEnabled': json['document_stub_pruning_enabled'] == null ? undefined : json['document_stub_pruning_enabled'],
        'documentsUrl': json['documents_url'] == null ? undefined : json['documents_url'],
        'filenameGeneratorBackend': json['filename_generator_backend'] == null ? undefined : json['filename_generator_backend'],
        'filenameGeneratorBackendArguments': json['filename_generator_backend_arguments'] == null ? undefined : json['filename_generator_backend_arguments'],
        'id': json['id'] == null ? undefined : json['id'],
        'label': json['label'],
        'quickLabelListUrl': json['quick_label_list_url'] == null ? undefined : json['quick_label_list_url'],
        'trashTimePeriod': json['trash_time_period'] == null ? undefined : json['trash_time_period'],
        'trashTimeUnit': json['trash_time_unit'] == null ? undefined : json['trash_time_unit'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function DocumentTypeToJSON(json: any): DocumentType {
    return DocumentTypeToJSONTyped(json, false);
}

export function DocumentTypeToJSONTyped(value?: Omit<DocumentType, 'documents_url'|'id'|'quick_label_list_url'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'delete_time_period': value['deleteTimePeriod'],
        'delete_time_unit': value['deleteTimeUnit'],
        'document_stub_expiration_interval': value['documentStubExpirationInterval'],
        'document_stub_pruning_enabled': value['documentStubPruningEnabled'],
        'filename_generator_backend': value['filenameGeneratorBackend'],
        'filename_generator_backend_arguments': value['filenameGeneratorBackendArguments'],
        'label': value['label'],
        'trash_time_period': value['trashTimePeriod'],
        'trash_time_unit': value['trashTimeUnit'],
    };
}

