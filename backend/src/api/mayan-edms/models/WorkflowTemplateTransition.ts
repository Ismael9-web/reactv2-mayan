/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowTemplateState } from './WorkflowTemplateState';
import {
    WorkflowTemplateStateFromJSON,
    WorkflowTemplateStateFromJSONTyped,
    WorkflowTemplateStateToJSON,
    WorkflowTemplateStateToJSONTyped,
} from './WorkflowTemplateState';

/**
 * 
 * @export
 * @interface WorkflowTemplateTransition
 */
export interface WorkflowTemplateTransition {
    /**
     * The condition that will determine if this transition is enabled or not. The condition is evaluated against the workflow instance. Conditions that do not return any value, that return the Python logical None, or an empty string ('') are considered to be logical false, any other value is considered to be the logical true.
     * @type {string}
     * @memberof WorkflowTemplateTransition
     */
    condition?: string;
    /**
     * 
     * @type {WorkflowTemplateState}
     * @memberof WorkflowTemplateTransition
     */
    destinationState?: WorkflowTemplateState;
    /**
     * Primary key of the destination state to be added.
     * @type {number}
     * @memberof WorkflowTemplateTransition
     */
    destinationStateId: number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateTransition
     */
    readonly fieldListUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTemplateTransition
     */
    readonly id?: number;
    /**
     * A short text to describe the transition.
     * @type {string}
     * @memberof WorkflowTemplateTransition
     */
    label: string;
    /**
     * 
     * @type {WorkflowTemplateState}
     * @memberof WorkflowTemplateTransition
     */
    originState?: WorkflowTemplateState;
    /**
     * Primary key of the origin state to be added.
     * @type {number}
     * @memberof WorkflowTemplateTransition
     */
    originStateId: number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateTransition
     */
    readonly triggerListUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateTransition
     */
    readonly url?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTemplateTransition
     */
    readonly workflowTemplateId?: number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateTransition
     */
    readonly workflowTemplateUrl?: string;
}

/**
 * Check if a given object implements the WorkflowTemplateTransition interface.
 */
export function instanceOfWorkflowTemplateTransition(value: object): value is WorkflowTemplateTransition {
    if (!('destinationStateId' in value) || value['destinationStateId'] === undefined) return false;
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('originStateId' in value) || value['originStateId'] === undefined) return false;
    return true;
}

export function WorkflowTemplateTransitionFromJSON(json: any): WorkflowTemplateTransition {
    return WorkflowTemplateTransitionFromJSONTyped(json, false);
}

export function WorkflowTemplateTransitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTemplateTransition {
    if (json == null) {
        return json;
    }
    return {
        
        'condition': json['condition'] == null ? undefined : json['condition'],
        'destinationState': json['destination_state'] == null ? undefined : WorkflowTemplateStateFromJSON(json['destination_state']),
        'destinationStateId': json['destination_state_id'],
        'fieldListUrl': json['field_list_url'] == null ? undefined : json['field_list_url'],
        'id': json['id'] == null ? undefined : json['id'],
        'label': json['label'],
        'originState': json['origin_state'] == null ? undefined : WorkflowTemplateStateFromJSON(json['origin_state']),
        'originStateId': json['origin_state_id'],
        'triggerListUrl': json['trigger_list_url'] == null ? undefined : json['trigger_list_url'],
        'url': json['url'] == null ? undefined : json['url'],
        'workflowTemplateId': json['workflow_template_id'] == null ? undefined : json['workflow_template_id'],
        'workflowTemplateUrl': json['workflow_template_url'] == null ? undefined : json['workflow_template_url'],
    };
}

export function WorkflowTemplateTransitionToJSON(json: any): WorkflowTemplateTransition {
    return WorkflowTemplateTransitionToJSONTyped(json, false);
}

export function WorkflowTemplateTransitionToJSONTyped(value?: Omit<WorkflowTemplateTransition, 'field_list_url'|'id'|'trigger_list_url'|'url'|'workflow_template_id'|'workflow_template_url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'condition': value['condition'],
        'destination_state': WorkflowTemplateStateToJSON(value['destinationState']),
        'destination_state_id': value['destinationStateId'],
        'label': value['label'],
        'origin_state': WorkflowTemplateStateToJSON(value['originState']),
        'origin_state_id': value['originStateId'],
    };
}

