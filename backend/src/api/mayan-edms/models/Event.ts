/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentType } from './ContentType';
import {
    ContentTypeFromJSON,
    ContentTypeFromJSONTyped,
    ContentTypeToJSON,
    ContentTypeToJSONTyped,
} from './ContentType';
import type { EventType } from './EventType';
import {
    EventTypeFromJSON,
    EventTypeFromJSONTyped,
    EventTypeToJSON,
    EventTypeToJSONTyped,
} from './EventType';

/**
 * 
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * 
     * @type {number}
     * @memberof Event
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    readonly actor?: string;
    /**
     * 
     * @type {ContentType}
     * @memberof Event
     */
    actorContentType?: ContentType;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    readonly target?: string;
    /**
     * 
     * @type {ContentType}
     * @memberof Event
     */
    targetContentType?: ContentType;
    /**
     * 
     * @type {EventType}
     * @memberof Event
     */
    verb?: EventType;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    actorObjectId: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    targetObjectId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Event
     */
    timestamp?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof Event
     */
    _public?: boolean;
}

/**
 * Check if a given object implements the Event interface.
 */
export function instanceOfEvent(value: object): value is Event {
    if (!('actorObjectId' in value) || value['actorObjectId'] === undefined) return false;
    return true;
}

export function EventFromJSON(json: any): Event {
    return EventFromJSONTyped(json, false);
}

export function EventFromJSONTyped(json: any, ignoreDiscriminator: boolean): Event {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'actor': json['actor'] == null ? undefined : json['actor'],
        'actorContentType': json['actor_content_type'] == null ? undefined : ContentTypeFromJSON(json['actor_content_type']),
        'target': json['target'] == null ? undefined : json['target'],
        'targetContentType': json['target_content_type'] == null ? undefined : ContentTypeFromJSON(json['target_content_type']),
        'verb': json['verb'] == null ? undefined : EventTypeFromJSON(json['verb']),
        'actorObjectId': json['actor_object_id'],
        'description': json['description'] == null ? undefined : json['description'],
        'targetObjectId': json['target_object_id'] == null ? undefined : json['target_object_id'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        '_public': json['public'] == null ? undefined : json['public'],
    };
}

export function EventToJSON(json: any): Event {
    return EventToJSONTyped(json, false);
}

export function EventToJSONTyped(value?: Omit<Event, 'id'|'actor'|'target'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actor_content_type': ContentTypeToJSON(value['actorContentType']),
        'target_content_type': ContentTypeToJSON(value['targetContentType']),
        'verb': EventTypeToJSON(value['verb']),
        'actor_object_id': value['actorObjectId'],
        'description': value['description'],
        'target_object_id': value['targetObjectId'],
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
        'public': value['_public'],
    };
}

