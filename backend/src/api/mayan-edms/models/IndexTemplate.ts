/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IndexTemplate
 */
export interface IndexTemplate {
    /**
     * URL of the API endpoint to add document types to this index template.
     * @type {string}
     * @memberof IndexTemplate
     */
    readonly documentTypesAddUrl?: string;
    /**
     * URL of the API endpoint showing the list document types associated with this index template.
     * @type {string}
     * @memberof IndexTemplate
     */
    readonly documentTypesUrl?: string;
    /**
     * URL of the API endpoint to remove document types from this index template.
     * @type {string}
     * @memberof IndexTemplate
     */
    readonly documentTypesRemoveUrl?: string;
    /**
     * Causes this index to be visible and updated when document data changes.
     * @type {boolean}
     * @memberof IndexTemplate
     */
    enabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof IndexTemplate
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof IndexTemplate
     */
    readonly indexTemplateRootNodeId?: string;
    /**
     * Short description of this index.
     * @type {string}
     * @memberof IndexTemplate
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof IndexTemplate
     */
    readonly nodesUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof IndexTemplate
     */
    readonly rebuildUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof IndexTemplate
     */
    readonly resetUrl?: string;
    /**
     * This value will be used by other apps to reference this index.
     * @type {string}
     * @memberof IndexTemplate
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof IndexTemplate
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the IndexTemplate interface.
 */
export function instanceOfIndexTemplate(value: object): value is IndexTemplate {
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    return true;
}

export function IndexTemplateFromJSON(json: any): IndexTemplate {
    return IndexTemplateFromJSONTyped(json, false);
}

export function IndexTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexTemplate {
    if (json == null) {
        return json;
    }
    return {
        
        'documentTypesAddUrl': json['document_types_add_url'] == null ? undefined : json['document_types_add_url'],
        'documentTypesUrl': json['document_types_url'] == null ? undefined : json['document_types_url'],
        'documentTypesRemoveUrl': json['document_types_remove_url'] == null ? undefined : json['document_types_remove_url'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'id': json['id'] == null ? undefined : json['id'],
        'indexTemplateRootNodeId': json['index_template_root_node_id'] == null ? undefined : json['index_template_root_node_id'],
        'label': json['label'],
        'nodesUrl': json['nodes_url'] == null ? undefined : json['nodes_url'],
        'rebuildUrl': json['rebuild_url'] == null ? undefined : json['rebuild_url'],
        'resetUrl': json['reset_url'] == null ? undefined : json['reset_url'],
        'slug': json['slug'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function IndexTemplateToJSON(json: any): IndexTemplate {
    return IndexTemplateToJSONTyped(json, false);
}

export function IndexTemplateToJSONTyped(value?: Omit<IndexTemplate, 'document_types_add_url'|'document_types_url'|'document_types_remove_url'|'id'|'index_template_root_node_id'|'nodes_url'|'rebuild_url'|'reset_url'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
        'label': value['label'],
        'slug': value['slug'],
    };
}

