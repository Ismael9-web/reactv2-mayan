/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MetadataType } from './MetadataType';
import {
    MetadataTypeFromJSON,
    MetadataTypeFromJSONTyped,
    MetadataTypeToJSON,
    MetadataTypeToJSONTyped,
} from './MetadataType';
import type { DocumentType } from './DocumentType';
import {
    DocumentTypeFromJSON,
    DocumentTypeFromJSONTyped,
    DocumentTypeToJSON,
    DocumentTypeToJSONTyped,
} from './DocumentType';

/**
 * 
 * @export
 * @interface DocumentTypeMetadataType
 */
export interface DocumentTypeMetadataType {
    /**
     * 
     * @type {DocumentType}
     * @memberof DocumentTypeMetadataType
     */
    documentType?: DocumentType;
    /**
     * 
     * @type {number}
     * @memberof DocumentTypeMetadataType
     */
    readonly id?: number;
    /**
     * 
     * @type {MetadataType}
     * @memberof DocumentTypeMetadataType
     */
    metadataType?: MetadataType;
    /**
     * 
     * @type {boolean}
     * @memberof DocumentTypeMetadataType
     */
    required?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DocumentTypeMetadataType
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the DocumentTypeMetadataType interface.
 */
export function instanceOfDocumentTypeMetadataType(value: object): value is DocumentTypeMetadataType {
    return true;
}

export function DocumentTypeMetadataTypeFromJSON(json: any): DocumentTypeMetadataType {
    return DocumentTypeMetadataTypeFromJSONTyped(json, false);
}

export function DocumentTypeMetadataTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentTypeMetadataType {
    if (json == null) {
        return json;
    }
    return {
        
        'documentType': json['document_type'] == null ? undefined : DocumentTypeFromJSON(json['document_type']),
        'id': json['id'] == null ? undefined : json['id'],
        'metadataType': json['metadata_type'] == null ? undefined : MetadataTypeFromJSON(json['metadata_type']),
        'required': json['required'] == null ? undefined : json['required'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function DocumentTypeMetadataTypeToJSON(json: any): DocumentTypeMetadataType {
    return DocumentTypeMetadataTypeToJSONTyped(json, false);
}

export function DocumentTypeMetadataTypeToJSONTyped(value?: Omit<DocumentTypeMetadataType, 'id'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'document_type': DocumentTypeToJSON(value['documentType']),
        'metadata_type': MetadataTypeToJSON(value['metadataType']),
        'required': value['required'],
    };
}

