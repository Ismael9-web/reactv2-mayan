"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfDocumentFileMetadataDriverEntry = instanceOfDocumentFileMetadataDriverEntry;
exports.DocumentFileMetadataDriverEntryFromJSON = DocumentFileMetadataDriverEntryFromJSON;
exports.DocumentFileMetadataDriverEntryFromJSONTyped = DocumentFileMetadataDriverEntryFromJSONTyped;
exports.DocumentFileMetadataDriverEntryToJSON = DocumentFileMetadataDriverEntryToJSON;
exports.DocumentFileMetadataDriverEntryToJSONTyped = DocumentFileMetadataDriverEntryToJSONTyped;
const DocumentFile_1 = require("./DocumentFile");
const StoredDriver_1 = require("./StoredDriver");
/**
 * Check if a given object implements the DocumentFileMetadataDriverEntry interface.
 */
function instanceOfDocumentFileMetadataDriverEntry(value) {
    return true;
}
function DocumentFileMetadataDriverEntryFromJSON(json) {
    return DocumentFileMetadataDriverEntryFromJSONTyped(json, false);
}
function DocumentFileMetadataDriverEntryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'documentFile': json['document_file'] == null ? undefined : (0, DocumentFile_1.DocumentFileFromJSON)(json['document_file']),
        'entriesUrl': json['entries_url'] == null ? undefined : json['entries_url'],
        'id': json['id'] == null ? undefined : json['id'],
        'storedDriver': json['stored_driver'] == null ? undefined : (0, StoredDriver_1.StoredDriverFromJSON)(json['stored_driver']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}
function DocumentFileMetadataDriverEntryToJSON(json) {
    return DocumentFileMetadataDriverEntryToJSONTyped(json, false);
}
function DocumentFileMetadataDriverEntryToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'document_file': (0, DocumentFile_1.DocumentFileToJSON)(value['documentFile']),
        'stored_driver': (0, StoredDriver_1.StoredDriverToJSON)(value['storedDriver']),
    };
}
