"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfMetadataType = instanceOfMetadataType;
exports.MetadataTypeFromJSON = MetadataTypeFromJSON;
exports.MetadataTypeFromJSONTyped = MetadataTypeFromJSONTyped;
exports.MetadataTypeToJSON = MetadataTypeToJSON;
exports.MetadataTypeToJSONTyped = MetadataTypeToJSONTyped;
/**
 * Check if a given object implements the MetadataType interface.
 */
function instanceOfMetadataType(value) {
    if (!('label' in value) || value['label'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    return true;
}
function MetadataTypeFromJSON(json) {
    return MetadataTypeFromJSONTyped(json, false);
}
function MetadataTypeFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        '_default': json['default'] == null ? undefined : json['default'],
        'id': json['id'] == null ? undefined : json['id'],
        'label': json['label'],
        'lookup': json['lookup'] == null ? undefined : json['lookup'],
        'name': json['name'],
        'parser': json['parser'] == null ? undefined : json['parser'],
        'parserArguments': json['parser_arguments'] == null ? undefined : json['parser_arguments'],
        'url': json['url'] == null ? undefined : json['url'],
        'validation': json['validation'] == null ? undefined : json['validation'],
        'validationArguments': json['validation_arguments'] == null ? undefined : json['validation_arguments'],
    };
}
function MetadataTypeToJSON(json) {
    return MetadataTypeToJSONTyped(json, false);
}
function MetadataTypeToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'default': value['_default'],
        'label': value['label'],
        'lookup': value['lookup'],
        'name': value['name'],
        'parser': value['parser'],
        'parser_arguments': value['parserArguments'],
        'validation': value['validation'],
        'validation_arguments': value['validationArguments'],
    };
}
