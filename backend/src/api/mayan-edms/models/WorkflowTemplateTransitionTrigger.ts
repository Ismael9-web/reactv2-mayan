/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventType } from './EventType';
import {
    EventTypeFromJSON,
    EventTypeFromJSONTyped,
    EventTypeToJSON,
    EventTypeToJSONTyped,
} from './EventType';

/**
 * 
 * @export
 * @interface WorkflowTemplateTransitionTrigger
 */
export interface WorkflowTemplateTransitionTrigger {
    /**
     * 
     * @type {EventType}
     * @memberof WorkflowTemplateTransitionTrigger
     */
    eventType?: EventType;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateTransitionTrigger
     */
    eventTypeId: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTemplateTransitionTrigger
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateTransitionTrigger
     */
    readonly url?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateTransitionTrigger
     */
    readonly workflowTemplateUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTemplateTransitionTrigger
     */
    readonly workflowTransitionId?: number;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateTransitionTrigger
     */
    readonly workflowTransitionUrl?: string;
}

/**
 * Check if a given object implements the WorkflowTemplateTransitionTrigger interface.
 */
export function instanceOfWorkflowTemplateTransitionTrigger(value: object): value is WorkflowTemplateTransitionTrigger {
    if (!('eventTypeId' in value) || value['eventTypeId'] === undefined) return false;
    return true;
}

export function WorkflowTemplateTransitionTriggerFromJSON(json: any): WorkflowTemplateTransitionTrigger {
    return WorkflowTemplateTransitionTriggerFromJSONTyped(json, false);
}

export function WorkflowTemplateTransitionTriggerFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTemplateTransitionTrigger {
    if (json == null) {
        return json;
    }
    return {
        
        'eventType': json['event_type'] == null ? undefined : EventTypeFromJSON(json['event_type']),
        'eventTypeId': json['event_type_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'url': json['url'] == null ? undefined : json['url'],
        'workflowTemplateUrl': json['workflow_template_url'] == null ? undefined : json['workflow_template_url'],
        'workflowTransitionId': json['workflow_transition_id'] == null ? undefined : json['workflow_transition_id'],
        'workflowTransitionUrl': json['workflow_transition_url'] == null ? undefined : json['workflow_transition_url'],
    };
}

export function WorkflowTemplateTransitionTriggerToJSON(json: any): WorkflowTemplateTransitionTrigger {
    return WorkflowTemplateTransitionTriggerToJSONTyped(json, false);
}

export function WorkflowTemplateTransitionTriggerToJSONTyped(value?: Omit<WorkflowTemplateTransitionTrigger, 'id'|'url'|'workflow_template_url'|'workflow_transition_id'|'workflow_transition_url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'event_type': EventTypeToJSON(value['eventType']),
        'event_type_id': value['eventTypeId'],
    };
}

