"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfEvent = instanceOfEvent;
exports.EventFromJSON = EventFromJSON;
exports.EventFromJSONTyped = EventFromJSONTyped;
exports.EventToJSON = EventToJSON;
exports.EventToJSONTyped = EventToJSONTyped;
const ContentType_1 = require("./ContentType");
const EventType_1 = require("./EventType");
/**
 * Check if a given object implements the Event interface.
 */
function instanceOfEvent(value) {
    if (!('actorObjectId' in value) || value['actorObjectId'] === undefined)
        return false;
    return true;
}
function EventFromJSON(json) {
    return EventFromJSONTyped(json, false);
}
function EventFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'actor': json['actor'] == null ? undefined : json['actor'],
        'actorContentType': json['actor_content_type'] == null ? undefined : (0, ContentType_1.ContentTypeFromJSON)(json['actor_content_type']),
        'target': json['target'] == null ? undefined : json['target'],
        'targetContentType': json['target_content_type'] == null ? undefined : (0, ContentType_1.ContentTypeFromJSON)(json['target_content_type']),
        'verb': json['verb'] == null ? undefined : (0, EventType_1.EventTypeFromJSON)(json['verb']),
        'actorObjectId': json['actor_object_id'],
        'description': json['description'] == null ? undefined : json['description'],
        'targetObjectId': json['target_object_id'] == null ? undefined : json['target_object_id'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        '_public': json['public'] == null ? undefined : json['public'],
    };
}
function EventToJSON(json) {
    return EventToJSONTyped(json, false);
}
function EventToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'actor_content_type': (0, ContentType_1.ContentTypeToJSON)(value['actorContentType']),
        'target_content_type': (0, ContentType_1.ContentTypeToJSON)(value['targetContentType']),
        'verb': (0, EventType_1.EventTypeToJSON)(value['verb']),
        'actor_object_id': value['actorObjectId'],
        'description': value['description'],
        'target_object_id': value['targetObjectId'],
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
        'public': value['_public'],
    };
}
