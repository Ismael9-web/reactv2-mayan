/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { Event } from './Event';
import {
    EventFromJSON,
    EventFromJSONTyped,
    EventToJSON,
    EventToJSONTyped,
} from './Event';

/**
 * 
 * @export
 * @interface Notification
 */
export interface Notification {
    /**
     * 
     * @type {Event}
     * @memberof Notification
     */
    action?: Event;
    /**
     * 
     * @type {boolean}
     * @memberof Notification
     */
    read?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    readonly url?: string;
    /**
     * 
     * @type {User}
     * @memberof Notification
     */
    user?: User;
}

/**
 * Check if a given object implements the Notification interface.
 */
export function instanceOfNotification(value: object): value is Notification {
    return true;
}

export function NotificationFromJSON(json: any): Notification {
    return NotificationFromJSONTyped(json, false);
}

export function NotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notification {
    if (json == null) {
        return json;
    }
    return {
        
        'action': json['action'] == null ? undefined : EventFromJSON(json['action']),
        'read': json['read'] == null ? undefined : json['read'],
        'url': json['url'] == null ? undefined : json['url'],
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
    };
}

export function NotificationToJSON(json: any): Notification {
    return NotificationToJSONTyped(json, false);
}

export function NotificationToJSONTyped(value?: Omit<Notification, 'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'action': EventToJSON(value['action']),
        'read': value['read'],
        'user': UserToJSON(value['user']),
    };
}

