/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
    RoleToJSONTyped,
} from './Role';
import type { ContentType } from './ContentType';
import {
    ContentTypeFromJSON,
    ContentTypeFromJSONTyped,
    ContentTypeToJSON,
    ContentTypeToJSONTyped,
} from './ContentType';

/**
 * 
 * @export
 * @interface ACL
 */
export interface ACL {
    /**
     * 
     * @type {ContentType}
     * @memberof ACL
     */
    contentType?: ContentType;
    /**
     * 
     * @type {number}
     * @memberof ACL
     */
    readonly id?: number;
    /**
     * 
     * @type {number}
     * @memberof ACL
     */
    readonly objectId?: number;
    /**
     * 
     * @type {string}
     * @memberof ACL
     */
    readonly permissionsAddUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ACL
     */
    readonly permissionsRemoveUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ACL
     */
    readonly permissionsUrl?: string;
    /**
     * 
     * @type {Role}
     * @memberof ACL
     */
    role?: Role;
    /**
     * 
     * @type {string}
     * @memberof ACL
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the ACL interface.
 */
export function instanceOfACL(value: object): value is ACL {
    return true;
}

export function ACLFromJSON(json: any): ACL {
    return ACLFromJSONTyped(json, false);
}

export function ACLFromJSONTyped(json: any, ignoreDiscriminator: boolean): ACL {
    if (json == null) {
        return json;
    }
    return {
        
        'contentType': json['content_type'] == null ? undefined : ContentTypeFromJSON(json['content_type']),
        'id': json['id'] == null ? undefined : json['id'],
        'objectId': json['object_id'] == null ? undefined : json['object_id'],
        'permissionsAddUrl': json['permissions_add_url'] == null ? undefined : json['permissions_add_url'],
        'permissionsRemoveUrl': json['permissions_remove_url'] == null ? undefined : json['permissions_remove_url'],
        'permissionsUrl': json['permissions_url'] == null ? undefined : json['permissions_url'],
        'role': json['role'] == null ? undefined : RoleFromJSON(json['role']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function ACLToJSON(json: any): ACL {
    return ACLToJSONTyped(json, false);
}

export function ACLToJSONTyped(value?: Omit<ACL, 'id'|'object_id'|'permissions_add_url'|'permissions_remove_url'|'permissions_url'|'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content_type': ContentTypeToJSON(value['contentType']),
        'role': RoleToJSON(value['role']),
    };
}

