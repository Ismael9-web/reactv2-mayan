/* tslint:disable */
/* eslint-disable */
/**
 * Mayan EDMS API
 * Free Open Source Electronic Document Management System
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentType } from './DocumentType';
import {
    DocumentTypeFromJSON,
    DocumentTypeFromJSONTyped,
    DocumentTypeToJSON,
    DocumentTypeToJSONTyped,
} from './DocumentType';
import type { StoredDriver } from './StoredDriver';
import {
    StoredDriverFromJSON,
    StoredDriverFromJSONTyped,
    StoredDriverToJSON,
    StoredDriverToJSONTyped,
} from './StoredDriver';

/**
 * 
 * @export
 * @interface DocumentTypeDriverConfiguration
 */
export interface DocumentTypeDriverConfiguration {
    /**
     * Enter the arguments for the drive for the specific document type as a YAML dictionary. ie: {"degrees": 180}
     * @type {string}
     * @memberof DocumentTypeDriverConfiguration
     */
    arguments?: string;
    /**
     * 
     * @type {DocumentType}
     * @memberof DocumentTypeDriverConfiguration
     */
    documentType?: DocumentType;
    /**
     * Enable this driver to process document files of the selected document type.
     * @type {boolean}
     * @memberof DocumentTypeDriverConfiguration
     */
    enabled?: boolean;
    /**
     * 
     * @type {StoredDriver}
     * @memberof DocumentTypeDriverConfiguration
     */
    storedDriver?: StoredDriver;
    /**
     * 
     * @type {string}
     * @memberof DocumentTypeDriverConfiguration
     */
    readonly url?: string;
}

/**
 * Check if a given object implements the DocumentTypeDriverConfiguration interface.
 */
export function instanceOfDocumentTypeDriverConfiguration(value: object): value is DocumentTypeDriverConfiguration {
    return true;
}

export function DocumentTypeDriverConfigurationFromJSON(json: any): DocumentTypeDriverConfiguration {
    return DocumentTypeDriverConfigurationFromJSONTyped(json, false);
}

export function DocumentTypeDriverConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentTypeDriverConfiguration {
    if (json == null) {
        return json;
    }
    return {
        
        'arguments': json['arguments'] == null ? undefined : json['arguments'],
        'documentType': json['document_type'] == null ? undefined : DocumentTypeFromJSON(json['document_type']),
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'storedDriver': json['stored_driver'] == null ? undefined : StoredDriverFromJSON(json['stored_driver']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function DocumentTypeDriverConfigurationToJSON(json: any): DocumentTypeDriverConfiguration {
    return DocumentTypeDriverConfigurationToJSONTyped(json, false);
}

export function DocumentTypeDriverConfigurationToJSONTyped(value?: Omit<DocumentTypeDriverConfiguration, 'url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'arguments': value['arguments'],
        'document_type': DocumentTypeToJSON(value['documentType']),
        'enabled': value['enabled'],
        'stored_driver': StoredDriverToJSON(value['storedDriver']),
    };
}

