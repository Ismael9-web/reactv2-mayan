version: '3.8'

services:
  db:
    image: postgres:17.5
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: mygeo-tresor
      POSTGRES_DB: demo
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ~/workspace/dsi-budget/POSTGRES/postgres:/var/lib/postgresql/data
    ports:
      - "55432:55432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "demo"]
      interval: 30s
      timeout: 20s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: pepa-linha
      ADMINER_DEFAULT_USER: demo
      ADMINER_DEFAULT_PASSWORD: mygeo-tresor
      ADMINER_DEFAULT_DB: demo

  minio:
    container_name: minio
    image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ~/workspace/dsi-budget/MinIO/data/minio:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-client:
    container_name: minio-client
    image: minio/mc:latest
    volumes:
      - ./config:/root/.mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host rm minio;
      /usr/bin/mc config host add --quiet --api s3v4 minio http://minio:9000 minioadmin minioadmin;
      sleep infinity;
      "
networks:
  default:
    driver: bridge